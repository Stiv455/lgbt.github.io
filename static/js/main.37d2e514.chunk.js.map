{"version":3,"sources":["Panels/Home.js","Panels/Test.js","Panels/Friends.js","config.js","App.js","sw.js","index.js"],"names":["Home","props","id","user","title","before","src","photo_100","description","city","first_name","last_name","size","stretched","onClick","go","data-to","Test","state","activeModal","modalHistory","modalBack","setActiveModal","length","this","indexOf","splice","push","osname","platform","modal","onClose","left","IOS","icon","header","caption","actions","mode","action","activePanel","React","Component","Friends","fetchedUser","geodata","getToken","friends","map","friend","key","ROUTES","location","window","hash","substr","App","connect","send","e","route","currentTarget","dataset","to","setState","setLocation","subscribe","detail","hasOwnProperty","type","data","token","access_token","getFriends","request_id","response","items","Math","floor","random","getAvatarUrl","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","isLocalhost","Boolean","hostname","match","URL","process","origin","addEventListener","fetch","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37d2e514.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, Group, Avatar, PanelHeader, Button } from '@vkontakte/vkui';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\n\nconst Home = (props) => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader>Главная</PanelHeader>\n\n\t\t{\n\t\t\tprops.user &&\n\t\t\t<Group title=\"User Info\">\n\t\t\t\t<Cell\n\t\t\t\t\tbefore={<Avatar src={props.user.photo_100}/>}\n\t\t\t\t\tdescription={props.user.city && props.user.city.title}\n\t\t\t\t>\n\t\t\t\t\t{`${props.user.first_name} ${props.user.last_name}`}\n\t\t\t\t</Cell>\n\t\t\t</Group>\n\t\t}\n\n\t\t<Group>\n\t\t\t<Cell>\n\t\t\t\t<Button size='l' stretched onClick={props.go} data-to='friends'>Список друзей</Button>\n\t\t\t</Cell>\n\t\t</Group>\n\t\t<Group>\n\t\t\t<Cell>\n\t\t\t\t<Button size='l' stretched onClick={props.go} data-to='test'>Настройки</Button>\n\t\t\t</Cell>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tuser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeader, ModalRoot, ModalCard, platform, IOS, PanelHeaderButton, View, Group, Button, FormLayout } from '@vkontakte/vkui';\r\nimport Icon56MoneyTransferOutline from '@vkontakte/icons/dist/56/money_transfer_outline';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nconst MODAL_CARD_MONEY_SEND = 'money-send';\r\nconst MODAL_CARD_APP_TO_MENU = 'app-to-menu';\r\n\r\nclass Test extends React.Component {\r\nconstructor(props) {\r\nsuper(props);\r\n\r\nthis.state = {\r\n  activeModal: null,\r\n  modalHistory: []\r\n};\r\n\r\nthis.modalBack = () => {\r\n  this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n};\r\n}\r\n\r\nsetActiveModal(activeModal) {\r\nactiveModal = activeModal || null;\r\nlet modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n\r\nif (activeModal === null) {\r\n  modalHistory = [];\r\n} else if (modalHistory.indexOf(activeModal) !== -1) {\r\n  modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n} else {\r\n  modalHistory.push(activeModal);\r\n}\r\n\r\n}\r\n\r\nrender() {\r\nconst osname = platform()\r\nconst props = this.props;\r\nconst modal = (\r\n<ModalRoot\r\nactiveModal={this.state.activeModal}\r\nonClose={this.modalBack}\r\n>\r\n<PanelHeader\r\nleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n</PanelHeaderButton>}\r\n>\r\nTest Modal\r\n</PanelHeader>\r\n  \r\n<ModalCard\r\nid={MODAL_CARD_MONEY_SEND}\r\nonClose={() => this.setActiveModal(null)}\r\nicon={<Icon56MoneyTransferOutline />}\r\nheader=\"Отправляйте деньги друзьям, используя банковскую карту\"\r\ncaption=\"Номер карты получателя не нужен — он сам решит, куда зачислить средства.\"\r\nactions={[{\r\ntitle: 'Попробовать',\r\nmode: 'primary',\r\naction: () => {\r\nthis.setActiveModal(MODAL_CARD_APP_TO_MENU);\r\n}\r\n}]}\r\n>\r\n</ModalCard>\r\n</ModalRoot>\r\n);\r\n\r\nreturn (\r\n  <View activePanel=\"modals\" modal={modal}>\r\n    <Panel id=\"modals\">\r\n      <PanelHeader>Модальные окна</PanelHeader>\r\n\r\n      <Group>\r\n        <FormLayout>\r\n          <Button size=\"xl\" mode=\"secondary\" onClick={() => this.setActiveModal(MODAL_CARD_MONEY_SEND)}>\r\n              Открыть модальные карточки\r\n          </Button>\r\n        </FormLayout>\r\n      </Group>\r\n    </Panel>\r\n  </View>\r\n);\r\n\r\n}\r\n}\r\n\r\nTest.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tuser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\r\n\t}),\r\n\r\ngo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Test;\r\n\r\n/*\r\n\r\nconst modal = (\r\n<ModalRoot\r\nactiveModal={this.state.activeModal}\r\nonClose={this.modalBack}\r\n>\r\n    \r\n<ModalCard\r\n\r\nid={MODAL_CARD_MONEY_SEND}\r\nonClose={() => this.setActiveModal(null)}\r\nicon={<Icon56MoneyTransferOutline />}\r\nheader=\"Отправляйте деньги друзьям, используя банковскую карту\"\r\ncaption=\"Номер карты получателя не нужен — он сам решит, куда зачислить средства.\"\r\nactions={[{\r\ntitle: 'Попробовать',\r\nmode: 'primary',\r\naction: () => {\r\nthis.setActiveModal(MODAL_CARD_APP_TO_MENU);\r\n}\r\n}]}\r\n>\r\n\r\n</ModalCard>\r\n\r\n</ModalRoot>\r\n);\r\n\r\n  return (\r\n    <View activePanel=\"modals\" modal={modal}>\r\n      <Panel id=\"modals\">\r\n        <PanelHeader>Модальные окна</PanelHeader>\r\n\r\n        <Group>\r\n          <FormLayout>\r\n            <Button size=\"xl\" mode=\"secondary\" onClick={() => this.setActiveModal(MODAL_CARD_MONEY_SEND)}>\r\n            Открыть модальные карточки\r\n            </Button>\r\n          </FormLayout>\r\n        </Group>\r\n      </Panel>\r\n    </View>\r\n\r\n);\r\n\r\n\r\n\r\n\r\n<Panel id={props.id}>\r\n\t\t\t\t<PanelHeader\r\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t\t\t</PanelHeaderButton>}\r\n\t\t\t\t>\r\n\t\t\t\t\tНастройки\r\n\t\t\t\t</PanelHeader>\r\n            <Group>\r\n              <Header mode=\"secondary\">Меню</Header>\r\n              <Cell expandable before={<Icon28UserOutline />}>Аккаунт</Cell>\r\n              <Cell expandable before={<Icon28PaletteOutline />}>Внешний вид</Cell>\r\n              <Cell expandable before={<Icon28SettingsOutline />}>Основные</Cell>\r\n            </Group>\r\n            <Group>\r\n              <Header mode=\"secondary\">Настройки</Header>\r\n              <Cell disabled after={<Switch defaultChecked />}>Сжимать фотографии</Cell>\r\n              <Cell disabled after={<Switch />}>Сжимать видео</Cell>\r\n            </Group>\r\n            <Group>\r\n              <Header mode=\"secondary\">Настройки системы</Header>\r\n              <Cell expandable indicator=\"Русский\">Язык</Cell>\r\n              <Cell expandable indicator=\"При использовании\">Геолокация</Cell>\r\n            </Group>\r\n            {\r\n\t\t\tprops.user &&\r\n\t\t\t<Group>\r\n              <Header mode=\"secondary\">Список диалогов</Header>\r\n              <Cell before={<Avatar size={40} src={props.user.photo_100} />} after={<Icon28MessageOutline />}>Игорь Фёдоров</Cell>\r\n              <Cell before={<Avatar size={40} src={props.user.photo_100} />} after={<Icon28MessageOutline />}>Artur Stambultsian</Cell>\r\n            </Group>\r\n\t\t    }\r\n          </Panel>\r\n\r\n          \r\nconst MODAL_PAGE_FILTERS = 'filters';\r\nconst MODAL_PAGE_COUNTRIES = 'countries';\r\nconst MODAL_PAGE_STORY_FEEDBACK = 'story-feedback';\r\nconst MODAL_PAGE_USER_INFO = 'user-info';\r\n\r\nconst MODAL_CARD_MONEY_SEND = 'money-send';\r\nconst MODAL_CARD_APP_TO_MENU = 'app-to-menu';\r\nconst MODAL_CARD_ABOUT = 'say-about';\r\nconst MODAL_CARD_NOTIFICATIONS = 'notifications';\r\nconst MODAL_CARD_CHAT_INVITE = 'chat-invite';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeModal: null,\r\n      modalHistory: []\r\n    };\r\n\r\n    this.users = 'k'.repeat(25).split('').map(() => {\r\n      return getRandomUser();\r\n    });\r\n\r\n    this.modalBack = () => {\r\n      this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\r\n    };\r\n  }\r\n\r\n  setActiveModal(activeModal) {\r\n    activeModal = activeModal || null;\r\n    let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\r\n\r\n    if (activeModal === null) {\r\n      modalHistory = [];\r\n    } else if (modalHistory.indexOf(activeModal) !== -1) {\r\n      modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\r\n    } else {\r\n      modalHistory.push(activeModal);\r\n    }\r\n\r\n    this.setState({\r\n      activeModal,\r\n      modalHistory\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const modal = (\r\n      <ModalRoot\r\n        activeModal={this.state.activeModal}\r\n        onClose={this.modalBack}\r\n      >\r\n        <ModalPage\r\n          id={MODAL_PAGE_FILTERS}\r\n          onClose={this.modalBack}\r\n          header={\r\n            <ModalPageHeader\r\n              left={IS_PLATFORM_ANDROID && <PanelHeaderButton onClick={this.modalBack}><Icon24Cancel /></PanelHeaderButton>}\r\n              right={<PanelHeaderButton onClick={this.modalBack}>{IS_PLATFORM_IOS ? 'Готово' : <Icon24Done />}</PanelHeaderButton>}\r\n            >\r\n              Фильтры\r\n            </ModalPageHeader>\r\n          }\r\n        >\r\n          <FormLayout>\r\n            <FormLayoutGroup>\r\n              <Button mode=\"secondary\" onClick={() => this.setActiveModal(MODAL_PAGE_COUNTRIES)} size=\"xl\">Выбор страны</Button>\r\n              <Button mode=\"secondary\" onClick={() => this.setActiveModal(MODAL_PAGE_STORY_FEEDBACK)} size=\"xl\">Просмотры истории</Button>\r\n              <Button mode=\"secondary\" onClick={() => this.setActiveModal(MODAL_PAGE_USER_INFO)} size=\"xl\">Информация о пользователе</Button>\r\n            </FormLayoutGroup>\r\n\r\n            <SelectMimicry top=\"Страна\" placeholder=\"Выбрать страну\" onClick={() => this.setActiveModal(MODAL_PAGE_COUNTRIES)} />\r\n            <SelectMimicry top=\"Город\" placeholder=\"Выбрать город\" disabled />\r\n\r\n            <FormLayoutGroup top=\"Пол\">\r\n              <Radio name=\"sex\" value={0} defaultChecked>Любой</Radio>\r\n              <Radio name=\"sex\" value={1}>Мужской</Radio>\r\n              <Radio name=\"sex\" value={2}>Женский</Radio>\r\n            </FormLayoutGroup>\r\n\r\n            <SelectMimicry top=\"Школа\" placeholder=\"Выбрать школу\" disabled />\r\n            <SelectMimicry top=\"Университет\" placeholder=\"Выбрать университет\" disabled />\r\n\r\n            <FormLayoutGroup top=\"Дополнительно\">\r\n              <Checkbox>С фотографией</Checkbox>\r\n              <Checkbox>Сейчас на сайте</Checkbox>\r\n            </FormLayoutGroup>\r\n\r\n            <FormLayoutGroup top=\"Работа\">\r\n              <Input placeholder=\"Место работы\" />\r\n              <Input placeholder=\"Должность\" />\r\n            </FormLayoutGroup>\r\n\r\n            <FormLayoutGroup top=\"Дата рождения\">\r\n              <SelectMimicry placeholder=\"День рождения\" disabled />\r\n              <SelectMimicry placeholder=\"Месяц рождения\" disabled />\r\n              <SelectMimicry placeholder=\"Год рождения\" disabled />\r\n            </FormLayoutGroup>\r\n          </FormLayout>\r\n        </ModalPage>\r\n\r\n        <ModalPage\r\n          id={MODAL_PAGE_COUNTRIES}\r\n          header={\r\n            <ModalPageHeader\r\n              left={IS_PLATFORM_ANDROID && <PanelHeaderButton onClick={this.modalBack}><Icon24Cancel /></PanelHeaderButton>}\r\n              right={IS_PLATFORM_IOS && <PanelHeaderButton onClick={this.modalBack}><Icon24Dismiss /></PanelHeaderButton>}\r\n            >\r\n              Выберите страну\r\n            </ModalPageHeader>\r\n          }\r\n          settlingHeight={80}\r\n        >\r\n          <FormLayout>\r\n            <Button mode=\"secondary\" onClick={() => this.setActiveModal(MODAL_PAGE_USER_INFO)} size=\"xl\">Информация о пользователе</Button>\r\n\r\n            <FormLayoutGroup>\r\n              {importantCountries.map(({ id, title }) => {\r\n                return (\r\n                  <Radio key={id} name=\"country\" value={id}>{title}</Radio>\r\n                );\r\n              })}\r\n            </FormLayoutGroup>\r\n          </FormLayout>\r\n        </ModalPage>\r\n\r\n        <ModalPage\r\n          id={MODAL_PAGE_STORY_FEEDBACK}\r\n          header={\r\n            <ModalPageHeader\r\n              left={IS_PLATFORM_ANDROID && <PanelHeaderButton onClick={this.modalBack}><Icon24Cancel /></PanelHeaderButton>}\r\n              right={IS_PLATFORM_IOS && <PanelHeaderButton onClick={this.modalBack}><Icon24Dismiss /></PanelHeaderButton>}\r\n            >\r\n              Просмотры истории\r\n            </ModalPageHeader>\r\n          }\r\n          settlingHeight={80}\r\n        >\r\n          <List>\r\n            {this.users.map((user) => {\r\n              return (\r\n                <Cell\r\n                  before={<Avatar src={user.photo_100} />}\r\n                  key={user.id}\r\n                >{user.name}</Cell>\r\n              );\r\n            })}\r\n          </List>\r\n        </ModalPage>\r\n\r\n        <ModalPage\r\n          id={MODAL_PAGE_USER_INFO}\r\n          header={\r\n            <ModalPageHeader\r\n              left={IS_PLATFORM_ANDROID && <PanelHeaderButton onClick={this.modalBack}><Icon24Cancel /></PanelHeaderButton>}\r\n              right={IS_PLATFORM_IOS && <PanelHeaderButton onClick={this.modalBack}><Icon24Dismiss /></PanelHeaderButton>}\r\n            >\r\n              Информация о пользователе\r\n            </ModalPageHeader>\r\n          }\r\n        >\r\n          <List>\r\n            <Cell>\r\n              <InfoRow header=\"Дата рождения\">\r\n                30 января 1993\r\n              </InfoRow>\r\n            </Cell>\r\n            <Cell>\r\n              <InfoRow header=\"Родной город\">\r\n                Ереван\r\n              </InfoRow>\r\n            </Cell>\r\n            <Cell>\r\n              <InfoRow header=\"Место работы\">\r\n                Команда ВКонтакте\r\n              </InfoRow>\r\n            </Cell>\r\n          </List>\r\n        </ModalPage>\r\n\r\n        <ModalCard\r\n          id={MODAL_CARD_MONEY_SEND}\r\n          onClose={() => this.setActiveModal(null)}\r\n          icon={<Icon56MoneyTransferOutline />}\r\n          header=\"Отправляйте деньги друзьям, используя банковскую карту\"\r\n          caption=\"Номер карты получателя не нужен — он сам решит, куда зачислить средства.\"\r\n          actions={[{\r\n            title: 'Попробовать',\r\n            mode: 'primary',\r\n            action: () => {\r\n              this.setActiveModal(MODAL_CARD_APP_TO_MENU);\r\n            }\r\n          }]}\r\n        >\r\n\r\n        </ModalCard>\r\n\r\n        <ModalCard\r\n          id={MODAL_CARD_APP_TO_MENU}\r\n          onClose={() => this.setActiveModal(null)}\r\n          icon={<Avatar mode=\"app\" src={getAvatarUrl('app_zagadki', 200)} size={72} />}\r\n          header=\"Добавить игру «Загадки детства» в меню?\"\r\n          caption=\"Игра появится под списком разделов на экране меню и будет всегда под рукой.\"\r\n          actions={[{\r\n            title: 'Добавить в меню',\r\n            mode: 'primary',\r\n            action: () => {\r\n              this.setActiveModal(MODAL_CARD_ABOUT);\r\n            }\r\n          }\r\n          ]}\r\n        />\r\n\r\n        <ModalCard\r\n          id={MODAL_CARD_ABOUT}\r\n          onClose={() => this.setActiveModal(null)}\r\n          header=\"Расскажите о себе\"\r\n          actions={[\r\n            {\r\n              title: 'Сохранить',\r\n              mode: 'primary',\r\n              action: () => {\r\n                this.setActiveModal(MODAL_CARD_NOTIFICATIONS);\r\n              }\r\n            }\r\n          ]}\r\n        >\r\n          <Textarea defaultValue={'В Грузии'} />\r\n        </ModalCard>\r\n\r\n        <ModalCard\r\n          id={MODAL_CARD_NOTIFICATIONS}\r\n          onClose={() => this.setActiveModal(null)}\r\n          icon={<Icon56NotificationOutline />}\r\n          header=\"Приложение запрашивает разрешение на отправку Вам уведомлений\"\r\n          actions={[{\r\n            title: 'Запретить',\r\n            mode: 'secondary',\r\n            action: () => this.setActiveModal(MODAL_CARD_CHAT_INVITE)\r\n          }, {\r\n            title: 'Разрешить',\r\n            mode: 'primary',\r\n            action: () => this.setActiveModal(MODAL_CARD_CHAT_INVITE)\r\n          }]}\r\n        />\r\n\r\n        <ModalCard\r\n          id={MODAL_CARD_CHAT_INVITE}\r\n          onClose={() => this.setActiveModal(null)}\r\n          icon={<Avatar src={getAvatarUrl('chat_basketball', 200)} size={72} />}\r\n          header=\"Баскетбол на выходных\"\r\n          caption=\"Приглашение в беседу\"\r\n          actions={[{\r\n            title: 'Присоединиться',\r\n            mode: 'primary',\r\n            action: () => this.setActiveModal(null)\r\n          }, {\r\n            title: 'Скопировать приглашение',\r\n            mode: 'secondary',\r\n            action: () => this.setActiveModal(null)\r\n          }]}\r\n          actionsLayout=\"vertical\"\r\n        >\r\n          <UsersStack\r\n            photos={[\r\n              getAvatarUrl('user_mm'),\r\n              getAvatarUrl('user_ilyagrshn'),\r\n              getAvatarUrl('user_lihachyov'),\r\n              getAvatarUrl('user_wayshev'),\r\n              getAvatarUrl('user_arthurstam'),\r\n              getAvatarUrl('user_xyz'),\r\n            ]}\r\n            size=\"m\"\r\n            count={3}\r\n            layout=\"vertical\"\r\n          >Алексей, Илья, Михаил<br />и ещё 3 человека</UsersStack>\r\n        </ModalCard>\r\n      </ModalRoot>\r\n    );\r\n\r\n    return (\r\n      <View activePanel=\"modals\" modal={modal}>\r\n        <Panel id=\"modals\">\r\n          <PanelHeader>Модальные окна</PanelHeader>\r\n\r\n          <Group>\r\n            <FormLayout>\r\n              <Button size=\"xl\" mode=\"secondary\" onClick={() => this.setActiveModal(MODAL_PAGE_FILTERS)}>\r\n                  Открыть модальную страницу\r\n              </Button>\r\n\r\n              <Button size=\"xl\" mode=\"secondary\" onClick={() => this.setActiveModal(MODAL_CARD_MONEY_SEND)}>\r\n                  Открыть модальные карточки\r\n              </Button>\r\n            </FormLayout>\r\n          </Group>\r\n        </Panel>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n<App />\r\n\r\n*/","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Panel, Group, PanelHeader, platform, IOS } from '@vkontakte/vkui';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nclass Friends extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: null,\n\t\t\tgeodata: null,\n\t\t};\n\t}\n\tcomponentDidMount() {\n\t\tthis.props.getToken();\n\t}\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t>\n\t\t\t\t\tДрузья\n\t\t\t\t</PanelHeader>\n\t\t\t\t<Group title=\"Friends List\">\n\n\t\t\t\t\t\t{props.friends && props.friends.map((friend) => \n\t\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t\tkey={friend.last_name}\n\t\t\t\t\t\t\t\tbefore={<Avatar src={friend.photo_100}/>}\n\t\t\t\t\t\t\t\tdescription={friend.city ? friend.city.title : ''}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{`${friend.first_name} ${friend.last_name}`}\n\t\t\t\t\t\t\t</Cell>)}\n\n\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nFriends.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgetToken: PropTypes.func.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Friends;\n","export const ROUTES = ['friends'];\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport Home from './Panels/Home';\nimport Test from './Panels/Test';\nimport Friends from './Panels/Friends';\nimport { ROUTES } from './config';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nconst location = window.location.hash.substr(1);\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: ~ROUTES.indexOf(location) ? location : 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tif (e.detail.hasOwnProperty('type')) {\n\t\t\t\tswitch (e.detail.type) {\n\t\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'VKWebAppAccessTokenReceived':\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\ttoken: e.detail.data.access_token\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.getFriends();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'VKWebAppCallAPIMethodResult':\n\t\t\t\t\t\tdebugger;\n\t\t\t\t\t\tif (e.detail.data.request_id === '34bc') {\n\t\t\t\t\t\t\tthis.setState({ friends: e.detail.data.response.items });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t\tconnect.send('VKWebAppGetGeodata', {});\n\t}\n\n\tgetToken = () => {\n\t\tconnect.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7151811, \"scope\": \"friends\"});\n\t}\n\n\tgetFriends() {\n\t\tconnect.send(\"VKWebAppCallAPIMethod\", {\n\t\t\t'method': \"friends.get\",\n\t\t\t'request_id': '34bc',\n\t\t\t'params': {\n\t\t\t\t'fields': 'city,domain,photo_100',\n\t\t\t\t'order': 'mobile',\n\t\t\t\t'access_token': this.state.token,\n\t\t\t\t'v': '5.87',\n\t\t\t}\n\t\t});\n\t}\n\tgetRandomArrayElement(items) {\n\t\treturn items[Math.floor(Math.random() * items.length)];\n\t  }\n\n\tgo = (e) => {\n\t\tconst route = e.currentTarget.dataset.to;\n\t\tthis.setState({ activePanel: route })\n\t\tthis.setLocation(route)\n\t};\n\n\tsetLocation = (route) => {\n\t\tif (route !== 'home') {\n\t\t\tconnect.send('VKWebAppSetLocation', { location: route });\n\t\t} else {\n\t\t\tconnect.send('VKWebAppSetLocation', { location: '' });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" user={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Friends id=\"friends\" data={this.state.data} friends={this.state.friends} getToken={this.getToken} token={this.state.token} go={this.go} />\n\t\t\t\t<Test id=\"test\" data={this.state.data} getAvatarUrl={this.getAvatarUrl} go={this.go} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es/map';\nimport 'core-js/es/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\nimport './main.css';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Service Worker For Cache\nregisterServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}